@{
    object? errorObject;
    ViewData.TryGetValue("errorMessage", out errorObject);
}


@if (errorObject is ErrorViewModel error && error.ErrorMessage != String.Empty)
{
    <div class="alert alert-warning alert-dismissible fade show" role="alert">
        @error.ErrorMessage
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (Model is not null)
{
    <div>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Длинный URL</th>
                    <th>Сокращенный URL</th>
                    <th>Дата создания</th>
                    <th>Количество переходов</th>
                    <th></th>
                    <th></th>
                </tr>
            </thead>
            <tbody> 
                @foreach (LinkDto link in Model)
                {
                    <tr>
                        <td><a href="@link.LongURL">@link.LongURL</a></td>
                        <td><a href="@link.ShortURL">@link.ShortURL</a></td>
                        <td>@link.Created</td>
                        <td>@link.ClickCount</td>
                        <td><a class="btn btn-warning" asp-controller="Home" asp-action="Edit" asp-route-id="@link.Id">Изменить</a></td>
                        <td><a class="btn btn-danger" asp-controller="Home" asp-action="Delete" asp-route-id="@link.Id">Удалить</a></td>
                    </tr>
                }
            </tbody>
        </table>
        <div>
            <a class="btn btn-primary" asp-controller="Home" asp-action="Create">Добавить URL</a>
        </div>
    </div>

}

